{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nconst _ = require(\"lodash\");\nconst Op = require(\"../../../operators\");\nconst Utils = require(\"../../../utils\");\nconst OperatorHelpers = {\n  OperatorMap: {\n    [Op.eq]: \"=\",\n    [Op.ne]: \"!=\",\n    [Op.gte]: \">=\",\n    [Op.gt]: \">\",\n    [Op.lte]: \"<=\",\n    [Op.lt]: \"<\",\n    [Op.not]: \"IS NOT\",\n    [Op.is]: \"IS\",\n    [Op.in]: \"IN\",\n    [Op.notIn]: \"NOT IN\",\n    [Op.like]: \"LIKE\",\n    [Op.notLike]: \"NOT LIKE\",\n    [Op.iLike]: \"ILIKE\",\n    [Op.notILike]: \"NOT ILIKE\",\n    [Op.startsWith]: \"LIKE\",\n    [Op.endsWith]: \"LIKE\",\n    [Op.substring]: \"LIKE\",\n    [Op.regexp]: \"~\",\n    [Op.notRegexp]: \"!~\",\n    [Op.iRegexp]: \"~*\",\n    [Op.notIRegexp]: \"!~*\",\n    [Op.between]: \"BETWEEN\",\n    [Op.notBetween]: \"NOT BETWEEN\",\n    [Op.overlap]: \"&&\",\n    [Op.contains]: \"@>\",\n    [Op.contained]: \"<@\",\n    [Op.adjacent]: \"-|-\",\n    [Op.strictLeft]: \"<<\",\n    [Op.strictRight]: \">>\",\n    [Op.noExtendRight]: \"&<\",\n    [Op.noExtendLeft]: \"&>\",\n    [Op.any]: \"ANY\",\n    [Op.all]: \"ALL\",\n    [Op.and]: \" AND \",\n    [Op.or]: \" OR \",\n    [Op.col]: \"COL\",\n    [Op.placeholder]: \"$$PLACEHOLDER$$\",\n    [Op.match]: \"@@\"\n  },\n  OperatorsAliasMap: {},\n  setOperatorsAliases(aliases) {\n    if (!aliases || _.isEmpty(aliases)) {\n      this.OperatorsAliasMap = false;\n    } else {\n      this.OperatorsAliasMap = __spreadValues({}, aliases);\n    }\n  },\n  _replaceAliases(orig) {\n    const obj = {};\n    if (!this.OperatorsAliasMap) {\n      return orig;\n    }\n    Utils.getOperators(orig).forEach(op => {\n      const item = orig[op];\n      if (_.isPlainObject(item)) {\n        obj[op] = this._replaceAliases(item);\n      } else {\n        obj[op] = item;\n      }\n    });\n    _.forOwn(orig, (item, prop) => {\n      prop = this.OperatorsAliasMap[prop] || prop;\n      if (_.isPlainObject(item)) {\n        item = this._replaceAliases(item);\n      }\n      obj[prop] = item;\n    });\n    return obj;\n  }\n};\nmodule.exports = OperatorHelpers;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAEA,MAAMA,IAAIC,QAAQ;AAClB,MAAMC,KAAKD,QAAQ;AACnB,MAAME,QAAQF,QAAQ;AAEtB,MAAMG,kBAAkB;EACtBC,aAAa;IAAA,CACVH,GAAGI,KAAK;IAAA,CACRJ,GAAGK,KAAK;IAAA,CACRL,GAAGM,MAAM;IAAA,CACTN,GAAGO,KAAK;IAAA,CACRP,GAAGQ,MAAM;IAAA,CACTR,GAAGS,KAAK;IAAA,CACRT,GAAGU,MAAM;IAAA,CACTV,GAAGW,KAAK;IAAA,CACRX,GAAGY,KAAK;IAAA,CACRZ,GAAGa,QAAQ;IAAA,CACXb,GAAGc,OAAO;IAAA,CACVd,GAAGe,UAAU;IAAA,CACbf,GAAGgB,QAAQ;IAAA,CACXhB,GAAGiB,WAAW;IAAA,CACdjB,GAAGkB,aAAa;IAAA,CAChBlB,GAAGmB,WAAW;IAAA,CACdnB,GAAGoB,YAAY;IAAA,CACfpB,GAAGqB,SAAS;IAAA,CACZrB,GAAGsB,YAAY;IAAA,CACftB,GAAGuB,UAAU;IAAA,CACbvB,GAAGwB,aAAa;IAAA,CAChBxB,GAAGyB,UAAU;IAAA,CACbzB,GAAG0B,aAAa;IAAA,CAChB1B,GAAG2B,UAAU;IAAA,CACb3B,GAAG4B,WAAW;IAAA,CACd5B,GAAG6B,YAAY;IAAA,CACf7B,GAAG8B,WAAW;IAAA,CACd9B,GAAG+B,aAAa;IAAA,CAChB/B,GAAGgC,cAAc;IAAA,CACjBhC,GAAGiC,gBAAgB;IAAA,CACnBjC,GAAGkC,eAAe;IAAA,CAClBlC,GAAGmC,MAAM;IAAA,CACTnC,GAAGoC,MAAM;IAAA,CACTpC,GAAGqC,MAAM;IAAA,CACTrC,GAAGsC,KAAK;IAAA,CACRtC,GAAGuC,MAAM;IAAA,CACTvC,GAAGwC,cAAc;IAAA,CACjBxC,GAAGyC,QAAQ;EAAA;EAGdC,mBAAmB;EAEnBC,oBAAoBC,SAAS;IAC3B,IAAI,CAACA,WAAW9C,EAAE+C,QAAQD,UAAU;MAClC,KAAKF,oBAAoB;IAAA,OACpB;MACL,KAAKA,oBAAoBI,mBAAKF;IAAA;EAAA;EAIlCG,gBAAgBC,MAAM;IACpB,MAAMC,MAAM;IACZ,IAAI,CAAC,KAAKP,mBAAmB;MAC3B,OAAOM;IAAA;IAGT/C,MAAMiD,aAAaF,MAAMG,QAAQC,MAAM;MACrC,MAAMC,OAAOL,KAAKI;MAClB,IAAItD,EAAEwD,cAAcD,OAAO;QACzBJ,IAAIG,MAAM,KAAKL,gBAAgBM;MAAA,OAC1B;QACLJ,IAAIG,MAAMC;MAAA;IAAA;IAIdvD,EAAEyD,OAAOP,MAAM,CAACK,MAAMG,SAAS;MAC7BA,OAAO,KAAKd,kBAAkBc,SAASA;MACvC,IAAI1D,EAAEwD,cAAcD,OAAO;QACzBA,OAAO,KAAKN,gBAAgBM;MAAA;MAE9BJ,IAAIO,QAAQH;IAAA;IAEd,OAAOJ;EAAA;AAAA;AAIXQ,OAAOC,UAAUxD","names":["_","require","Op","Utils","OperatorHelpers","OperatorMap","eq","ne","gte","gt","lte","lt","not","is","in","notIn","like","notLike","iLike","notILike","startsWith","endsWith","substring","regexp","notRegexp","iRegexp","notIRegexp","between","notBetween","overlap","contains","contained","adjacent","strictLeft","strictRight","noExtendRight","noExtendLeft","any","all","and","or","col","placeholder","match","OperatorsAliasMap","setOperatorsAliases","aliases","isEmpty","__spreadValues","_replaceAliases","orig","obj","getOperators","forEach","op","item","isPlainObject","forOwn","prop","module","exports"],"sources":["C:\\Users\\rizla\\projects\\react\\NSBEHack-main\\nsbeapp\\node_modules\\sequelize\\src\\dialects\\abstract\\query-generator\\operators.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Op = require('../../../operators');\nconst Utils = require('../../../utils');\n\nconst OperatorHelpers = {\n  OperatorMap: {\n    [Op.eq]: '=',\n    [Op.ne]: '!=',\n    [Op.gte]: '>=',\n    [Op.gt]: '>',\n    [Op.lte]: '<=',\n    [Op.lt]: '<',\n    [Op.not]: 'IS NOT',\n    [Op.is]: 'IS',\n    [Op.in]: 'IN',\n    [Op.notIn]: 'NOT IN',\n    [Op.like]: 'LIKE',\n    [Op.notLike]: 'NOT LIKE',\n    [Op.iLike]: 'ILIKE',\n    [Op.notILike]: 'NOT ILIKE',\n    [Op.startsWith]: 'LIKE',\n    [Op.endsWith]: 'LIKE',\n    [Op.substring]: 'LIKE',\n    [Op.regexp]: '~',\n    [Op.notRegexp]: '!~',\n    [Op.iRegexp]: '~*',\n    [Op.notIRegexp]: '!~*',\n    [Op.between]: 'BETWEEN',\n    [Op.notBetween]: 'NOT BETWEEN',\n    [Op.overlap]: '&&',\n    [Op.contains]: '@>',\n    [Op.contained]: '<@',\n    [Op.adjacent]: '-|-',\n    [Op.strictLeft]: '<<',\n    [Op.strictRight]: '>>',\n    [Op.noExtendRight]: '&<',\n    [Op.noExtendLeft]: '&>',\n    [Op.any]: 'ANY',\n    [Op.all]: 'ALL',\n    [Op.and]: ' AND ',\n    [Op.or]: ' OR ',\n    [Op.col]: 'COL',\n    [Op.placeholder]: '$$PLACEHOLDER$$',\n    [Op.match]: '@@'\n  },\n\n  OperatorsAliasMap: {},\n\n  setOperatorsAliases(aliases) {\n    if (!aliases || _.isEmpty(aliases)) {\n      this.OperatorsAliasMap = false;\n    } else {\n      this.OperatorsAliasMap = { ...aliases };\n    }\n  },\n\n  _replaceAliases(orig) {\n    const obj = {};\n    if (!this.OperatorsAliasMap) {\n      return orig;\n    }\n\n    Utils.getOperators(orig).forEach(op => {\n      const item = orig[op];\n      if (_.isPlainObject(item)) {\n        obj[op] = this._replaceAliases(item);\n      } else {\n        obj[op] = item;\n      }\n    });\n\n    _.forOwn(orig, (item, prop) => {\n      prop = this.OperatorsAliasMap[prop] || prop;\n      if (_.isPlainObject(item)) {\n        item = this._replaceAliases(item);\n      }\n      obj[prop] = item;\n    });\n    return obj;\n  }\n};\n\nmodule.exports = OperatorHelpers;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}