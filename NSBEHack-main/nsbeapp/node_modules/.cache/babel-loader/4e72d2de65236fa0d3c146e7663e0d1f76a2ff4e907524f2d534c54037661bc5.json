{"ast":null,"code":"\"use strict\";\n\nconst uuidv4 = require(\"uuid\").v4;\nconst TransactionQueries = {\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n  generateTransactionId() {\n    return uuidv4();\n  },\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n    return \"START TRANSACTION;\";\n  },\n  deferConstraintsQuery() {},\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n    return \"COMMIT;\";\n  },\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n    return \"ROLLBACK;\";\n  }\n};\nmodule.exports = TransactionQueries;","map":{"version":3,"mappings":";;AAEA,MAAMA,SAASC,QAAQ,QAAQC;AAE/B,MAAMC,qBAAqB;EASzBC,uBAAuBC,OAAOC,SAAS;IACrC,IAAIA,QAAQC,QAAQ;MAClB;IAAA;IAGF,OAAO,mCAAmCF;EAAA;EAG5CG,wBAAwB;IACtB,OAAOR;EAAA;EAUTS,sBAAsBC,aAAa;IACjC,IAAIA,YAAYH,QAAQ;MAEtB,OAAO,aAAa,KAAKI,gBAAgBD,YAAYE,MAAM;IAAA;IAG7D,OAAO;EAAA;EAGTC,wBAAwB;EAExBC,qBAAqB;EACrBC,mBAAmB;EACnBC,oBAAoB;EASpBC,uBAAuBP,aAAa;IAClC,IAAIA,YAAYH,QAAQ;MACtB;IAAA;IAGF,OAAO;EAAA;EAUTW,yBAAyBR,aAAa;IACpC,IAAIA,YAAYH,QAAQ;MAEtB,OAAO,yBAAyB,KAAKI,gBAAgBD,YAAYE,MAAM;IAAA;IAGzE,OAAO;EAAA;AAAA;AAIXO,OAAOC,UAAUjB","names":["uuidv4","require","v4","TransactionQueries","setIsolationLevelQuery","value","options","parent","generateTransactionId","startTransactionQuery","transaction","quoteIdentifier","name","deferConstraintsQuery","setConstraintQuery","setDeferredQuery","setImmediateQuery","commitTransactionQuery","rollbackTransactionQuery","module","exports"],"sources":["C:\\Users\\rizla\\projects\\react\\NSBEHack-main\\nsbeapp\\node_modules\\sequelize\\src\\dialects\\abstract\\query-generator\\transaction.js"],"sourcesContent":["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}