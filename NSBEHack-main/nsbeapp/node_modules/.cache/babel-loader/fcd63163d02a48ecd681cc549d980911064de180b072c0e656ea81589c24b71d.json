{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rizla\\\\projects\\\\react\\\\NSBEHack-main\\\\nsbeapp\\\\src\\\\MyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction displayUsers(users) {\n  if (!users.length) return null;\n  return users.map((users, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: users.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: users.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n}\n;\nexport default function MyForm(input) {\n  _s();\n  const [state, setState] = useState({\n    //   id:'', \n    name: '',\n    users: []\n  });\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    setState({\n      [name]: value\n    });\n  };\n  axios.get('/users').then(response => {\n    const data = response.data;\n    setState({\n      users: data\n    });\n    console.log('Data has been received!!');\n    console.log(data);\n  }).catch(() => {\n    alert('Error retrieving data!!!');\n  });\n  console.log('State: ', state.users);\n\n  //JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-\",\n    children: [displayUsers(state.users), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button1\",\n      onClick: () => input.setPage('home'),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n/** \r\nclass MyForm extends React.Component \r\n\r\n{\r\n  \r\n  constructor()\r\n  {\r\n    super();\r\n    this.state ={users: []};\r\n}\r\ncomponentDidMount() {\r\n       fetch('http://localhost:3000/users',{\r\n        method: 'GET'\r\n        })\r\n         .then(res => {\r\n             console.log(res);\r\n             return res.json()\r\n          })\r\n         .then(users => { \r\n             console.log(users); \r\n             this.setState({ users })\r\n          });\r\n      }\r\nrender() {\r\n     return (\r\n         <div className=\"Test\">\r\n             <h1>Users</h1>\r\n             {this.state.users.map(user =>\r\n             <div key={user.id}>user: {user.name} </div>\r\n           )}\r\n         </div>\r\n     );\r\n }\r\n  \r\n}\r\nexport default MyForm;\r\n\r\n /** \r\nclass MyForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: '' };\r\n  }\r\n \r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n \r\n  handleSubmit = (event) => {\r\n    alert('A form was submitted: ' + this.state.name);\r\n \r\n    fetch('http://localhost:3000/display-data', {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        // We convert the React state to JSON and send it as the POST body\r\n      body: JSON.stringify({\r\n        body: this.state.name})\r\n      })\r\n      \r\n      .then(function(response) {\r\n        \r\n        console.log(response)\r\n        \r\n        return response.json();\r\n      });\r\n \r\n    event.preventDefault();\r\n}\r\n \r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  } \r\n}\r\n*/\n_s(MyForm, \"uxwvo4qUVSRAwvEOuZ61xwmI+NA=\");\n_c = MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","axios","displayUsers","users","length","map","index","id","name","MyForm","input","state","setState","handleChange","target","value","get","then","response","data","console","log","catch","alert","setPage"],"sources":["C:/Users/rizla/projects/react/NSBEHack-main/nsbeapp/src/MyForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction displayUsers (users) {\r\n\r\n  if (!users.length) return null;\r\n\r\n\r\n\r\n  return users.map((users, index) => (\r\n    <div key={index} className=\"test\">\r\n      <h3>{users.id}</h3>\r\n      <p>{users.name}</p>\r\n    </div>\r\n  ));\r\n};\r\n\r\n\r\nexport default function MyForm(input) \r\n {\r\n\r\n\tconst [state, setState] = useState({\r\n //   id:'', \r\n    name:'',\r\n    users: []\r\n  });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState({ [name]: value });\r\n  };\r\n\r\n\r\n\r\n  axios.get('/users')\r\n    .then((response) => {\r\n      const data = response.data;\r\n      setState({ users: data });\r\n      console.log('Data has been received!!');\r\n      console.log(data);\r\n    })\r\n    .catch(() => {\r\n      alert('Error retrieving data!!!');\r\n    });\r\n  \r\n  console.log('State: ', state.users);\r\n\r\n    //JSX\r\n  return(\r\n      \r\n      <div className=\"blog-\">\r\n          \r\n        {displayUsers(state.users)}\r\n        <button className=\"button button1\" onClick={() => input.setPage('home')}>Go Back</button>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\n/** \r\nclass MyForm extends React.Component \r\n\r\n{\r\n  \r\n  constructor()\r\n  {\r\n    super();\r\n    this.state ={users: []};\r\n}\r\ncomponentDidMount() {\r\n       fetch('http://localhost:3000/users',{\r\n        method: 'GET'\r\n        })\r\n         .then(res => {\r\n             console.log(res);\r\n             return res.json()\r\n          })\r\n         .then(users => { \r\n             console.log(users); \r\n             this.setState({ users })\r\n          });\r\n      }\r\nrender() {\r\n     return (\r\n         <div className=\"Test\">\r\n             <h1>Users</h1>\r\n             {this.state.users.map(user =>\r\n             <div key={user.id}>user: {user.name} </div>\r\n           )}\r\n         </div>\r\n     );\r\n }\r\n  \r\n}\r\nexport default MyForm;\r\n\r\n /** \r\nclass MyForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: '' };\r\n  }\r\n \r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n \r\n  handleSubmit = (event) => {\r\n    alert('A form was submitted: ' + this.state.name);\r\n \r\n    fetch('http://localhost:3000/display-data', {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        // We convert the React state to JSON and send it as the POST body\r\n      body: JSON.stringify({\r\n        body: this.state.name})\r\n      })\r\n      \r\n      .then(function(response) {\r\n        \r\n        console.log(response)\r\n        \r\n        return response.json();\r\n      });\r\n \r\n    event.preventDefault();\r\n}\r\n \r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  } \r\n}\r\n*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,YAAY,CAAEC,KAAK,EAAE;EAE5B,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE,OAAO,IAAI;EAI9B,OAAOD,KAAK,CAACE,GAAG,CAAC,CAACF,KAAK,EAAEG,KAAK,kBAC5B;IAAiB,SAAS,EAAC,MAAM;IAAA,wBAC/B;MAAA,UAAKH,KAAK,CAACI;IAAE;MAAA;MAAA;MAAA;IAAA,QAAM,eACnB;MAAA,UAAIJ,KAAK,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,GAFXF,KAAK;IAAA;IAAA;IAAA;EAAA,QAIhB,CAAC;AACJ;AAAC;AAGD,eAAe,SAASG,MAAM,CAACC,KAAK,EACnC;EAAA;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IACnC;IACGQ,IAAI,EAAC,EAAE;IACPL,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMU,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC9B,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,MAAM;IAC9BF,QAAQ,CAAC;MAAE,CAACJ,IAAI,GAAGO;IAAM,CAAC,CAAC;EAC7B,CAAC;EAIDd,KAAK,CAACe,GAAG,CAAC,QAAQ,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAK;IAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;IAC1BP,QAAQ,CAAC;MAAET,KAAK,EAAEgB;IAAK,CAAC,CAAC;IACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCD,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,CAAC,CACDG,KAAK,CAAC,MAAM;IACXC,KAAK,CAAC,0BAA0B,CAAC;EACnC,CAAC,CAAC;EAEJH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEV,KAAK,CAACR,KAAK,CAAC;;EAEjC;EACF,oBAEI;IAAK,SAAS,EAAC,OAAO;IAAA,WAEnBD,YAAY,CAACS,KAAK,CAACR,KAAK,CAAC,eAC1B;MAAQ,SAAS,EAAC,gBAAgB;MAAC,OAAO,EAAE,MAAMO,KAAK,CAACc,OAAO,CAAC,MAAM,CAAE;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrF;AAGZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA,GAzCwBf,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}